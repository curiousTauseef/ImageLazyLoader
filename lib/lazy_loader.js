// Generated by CoffeeScript 1.3.1
(function() {
  var LazyLoader, lazy_loader;

  LazyLoader = (function() {

    LazyLoader.name = 'LazyLoader';

    function LazyLoader(cssClass) {
      this.cssClass = cssClass;
      this.updateImages();
    }

    LazyLoader.prototype.isElementVisible = function(element) {
      return element.getBoundingClientRect().top < window.innerHeight;
    };

    LazyLoader.prototype.updateImages = function() {
      var i, img, lowResElements, _results;
      lowResElements = document.getElementsByClassName(this.cssClass);
      i = 0;
      _results = [];
      while (i < lowResElements.length) {
        img = lowResElements[i];
        if (this.isElementVisible(img)) {
          this.loadHighRes(img);
          _results.push(img.className = img.className.replace(this.cssClass, ''));
        } else {
          _results.push(i++);
        }
      }
      return _results;
    };

    LazyLoader.prototype.loadHighRes = function(img) {
      img.src = img.getAttribute('data-img-src');
      return console.info("Fetching: " + img.src);
    };

    return LazyLoader;

  })();

  lazy_loader = new LazyLoader('low_res');

  window.onload = function() {
    var actualPosition;
    lazy_loader.updateImages();
    actualPosition = window.pageYOffset;
    return window.onscroll = function() {
      if (window.pageYOffset > actualPosition) {
        lazy_loader.updateImages();
      }
      return actualPosition = window.pageYOffset;
    };
  };

}).call(this);
