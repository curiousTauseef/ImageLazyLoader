// Generated by CoffeeScript 1.3.1
(function() {
  var LazyLoader, lazy_loader;

  LazyLoader = (function() {
    var lowResImages;

    LazyLoader.name = 'LazyLoader';

    lowResImages = [];

    function LazyLoader(cssClass) {
      this.cssClass = cssClass;
      this.updateImages();
    }

    LazyLoader.prototype.isElementVisible = function(element) {
      return element.getBoundingClientRect().top < window.innerHeight;
    };

    LazyLoader.prototype.listLowResImages = function(forceFetch) {
      if (forceFetch || this.lowResImages.length === 0) {
        this.lowResImages = document.getElementsByClassName(this.cssClass);
      }
      return this.lowResImages;
    };

    LazyLoader.prototype.updateImages = function() {
      var img, _i, _len, _ref, _results;
      _ref = this.listLowResImages(true);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        img = _ref[_i];
        if (this.isElementVisible(img)) {
          _results.push(this.loadHighRes(img));
        }
      }
      return _results;
    };

    LazyLoader.prototype.loadHighRes = function(img) {
      return img.src = img.getAttribute('data-img-src');
    };

    return LazyLoader;

  })();

  lazy_loader = new LazyLoader('low_res');

  window.onload = function() {
    var actualPosition;
    lazy_loader.updateImages();
    actualPosition = window.pageYOffset;
    return window.onscroll = function() {
      if (window.pageYOffset > actualPosition) {
        lazy_loader.updateImages();
      }
      return actualPosition = window.pageYOffset;
    };
  };

}).call(this);
